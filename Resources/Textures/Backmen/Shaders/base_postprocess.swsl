// Boilerplate
uniform sampler2D SCREEN_TEXTURE;
uniform sampler2D LIGHT_TEXTURE;

uniform highp float Zoom;

// Variables for controlling the falloff of the additive lighting effect.
uniform highp float CircleRadius;
uniform highp float CircleMinDist;
uniform highp float CirclePow;
uniform highp float CircleMax;
uniform highp float CircleMult;
uniform highp float FalloffClampMin;
uniform highp float FalloffClampMax;
uniform highp float FalloffStrength;
uniform highp float FalloffPow;
uniform highp float MaxBrightness;

void fragment() {
    COLOR = zTextureSpec(SCREEN_TEXTURE, Pos);
    highp vec2 aspect = vec2(1.0 / SCREEN_PIXEL_SIZE.x, 1.0 / SCREEN_PIXEL_SIZE.y);
    highp float actualZoom = Zoom;

    highp float totalCircleIntensity = 0.0;

    highp float circle = zCircleGradient(aspect, FRAGCOORD.xy, CircleMax, CircleRadius / actualZoom, CircleMinDist / actualZoom, CirclePow);
    circle *= CircleMult;

    totalCircleIntensity += clamp(circle, FalloffClampMin, FalloffClampMax);

    highp vec3 lightsampleraw = texture2D(LIGHT_TEXTURE, Pos).rgb;
    highp float graylight = max(zGrayscale(lightsampleraw) - max((1.0 - totalCircleIntensity) * FalloffStrength, 0.0), 0.0);
    graylight = pow(graylight, FalloffPow);

    highp vec3 lightsample = lightsampleraw * vec3(graylight);

    COLOR.rgb += clamp(lightsample, vec3(0.0), vec3(MaxBrightness));
}
