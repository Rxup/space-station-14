- type: entity
  abstract: true
  save: false
  id: AIBase
  components:
    - type: Tag
      tags:
      - CannotSuicide
    - type: ContentEye
    - type: TTS
      voice: TrainingRobot
    - type: StationAI
      lawsId: LawsStationAIDefault
      defaultLayer: blue
      layers:
        blue:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead"]
          state: blue_dead
          shader: unshaded
        - map: ["enum.PowerDeviceVisualLayers.Powered"]
          state: blue
          shader: unshaded
        - map: ["enum.AiVisualLayers.NotInEye"]
          state: not_in_eye
        thinking:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: thinking_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: thinking
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        alien:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: alien_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: alien
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        angel:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: angel_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: angel
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        banned:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: banned_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: banned
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        bliss:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: blue_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: bliss
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        clown:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: clown_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: clown
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        database:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: database_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: database
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        gentoo:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: gentoo_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: gentoo
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        glitchman:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: glitchman_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: glitchman
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        goon:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: goon_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: goon
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        hades:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: hades_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: hades
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        heartline:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: heartline_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: heartline
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        house:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: house_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: house
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        inverted:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: inverted_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: inverted
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        monochrome:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: monochrome_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: monochrome
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        murica:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: murica_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: murica
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        rainbow:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: murica_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: rainbow
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        red:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: red_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: red
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        red_october:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: red_october_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: red_october
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        static:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: static_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: static
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye
        weird:
        - state: 4
        - map: [ "enum.AiVisualLayers.Dead" ]
          state: weird_dead
          shader: unshaded
        - map: [ "enum.PowerDeviceVisualLayers.Powered" ]
          state: weird
          shader: unshaded
        - map: [ "enum.AiVisualLayers.NotInEye" ]
          state: not_in_eye

    - type: CriminalRecordsConsole
    - type: Visibility
    - type: UserInterface
      interfaces:
        enum.CommunicationsConsoleUiKey.Key:
          type: CommunicationsConsoleBoundUserInterface
        enum.AICameraListUiKey.Key:
          type: AICameraListBoundUserInterface
        enum.SiliconLawsUiKey.Key:
          type: SiliconLawBoundUserInterface
        enum.StrippingUiKey.Key:
          type: StrippableBoundUserInterface
        enum.CriminalRecordsConsoleKey.Key:
          type: CriminalRecordsConsoleBoundUserInterface
    - type: IntrinsicUI
      uis:
        enum.CommunicationsConsoleUiKey.Key:
          toggleAction: ActionAIShowCommunications
        enum.CriminalRecordsConsoleKey.Key:
          toggleAction: ActionAiShowCriminalRecords
    - type: ContainerContainer
      containers:
        tools: !type:Container
          ents: [ ]
    - type: CommunicationsConsole
      title: ai-station-console
      color: "#93e2ff"
      delay: 5
      global: false
    # Innate door remotes (bolting, emergency access, etc)
    - type: InnateItem
      afterInteract: false
      startingPriority: 25
      slots:
        opencloseremote: ActionOpenCloseRemote
        boltremote: ActionToggleBolts
        emergencyaccessremote: ActionToggleEmergencyAccess
    # Hide the inhand sprites
    - type: Hands
      showInHands: false
    # Allow examining things
    - type: MindContainer
      showExamineInfo: true
    - type: Input
      context: "human"
    - type: MobMover
    - type: InputMover
    - type: Clickable
    - type: InteractionOutline
    - type: Examiner
    - type: Actions
    - type: DoAfter
    - type: Speech
      speechSounds: Pai
    # Innate access
    - type: Access
      groups:
        - AllAccess
    # Wow, this is a lot of reoccurrances
    - type: IntrinsicRadioReceiver
    - type: IntrinsicRadioTransmitter
      channels:
        - Binary
        - Common
        - Command
        - CentCom
        - Engineering
        - Medical
        - Science
        - Security
        - Service
    - type: ActiveRadio
      channels:
        - Binary
        - Common
        - Command
        - CentCom
        - Engineering
        - Medical
        - Science
        - Security
        - Service
    # Can't see through walls
    - type: Eye
      drawFov: true
    - type: TypingIndicator
      proto: robot
    - type: SiliconLawBound

- type: entity
  parent: AICore
  id: AICoreShip
  name: AI Core
  suffix: ship
  save: false
  description: Ship core AI
  components:
  - type: NavMapBeacon
    color: "#ff0000"
    text: AI Core ship nuclear fission explosive
    enabled: false
  - type: NukeLabel
  - type: Nuke
    explosionType: Default
    maxIntensity: 100
    intensitySlope: 5
    totalIntensity: 5000000
    diskSlot:
      name: nuke-slot-component-slot-name-disk
      insertSound:
        path: /Audio/Machines/terminal_insert_disc.ogg
      ejectSound:
        path: /Audio/Machines/terminal_insert_disc.ogg
      whitelist:
        components:
        - NukeDisk
    alertLevelOnActivate: delta
    alertLevelOnDeactivate: green
  - type: StaticPrice
    price: 5000000
  - type: ContainerContainer
    containers:
      Nuke: !type:ContainerSlot
  - type: WarpPoint
    follow: true
    location: ShipAI
  - type: InteractionOutline
  - type: ActivatableUI
    key: enum.NukeUiKey.Key
  - type: UserInterface
    interfaces:
      enum.NukeUiKey.Key:
        type: NukeBoundUserInterface


- type: entity
  save: false
  parent: AIBase
  id: AICore
  name: AI Core
  description: Host for an AI. Likely more A than I.
  components:
    - type: BorgAINT
    - type: Repairable
    - type: Electrified
      shockDamage: 30
      shockTime: 5
      requirePower: true
      usesApcPower: true
    - type: EmitSoundOnCollide
      sound:
        path: /Audio/Effects/Lightning/lightningshock.ogg
        params:
          variation: 0.65
          volume: -10
    - type: ExtensionCableReceiver
    - type: LitOnPowered
    - type: ApcPowerReceiver
      powerLoad: 15000
    - type: ActivatableUIRequiresPower
    - type: AIEyePower
    # Can't move
    - type: MovementSpeedModifier
      baseWalkSpeed: 0
      baseSprintSpeed: 0
    - type: Physics
      bodyType: Dynamic
    - type: Fixtures
      fixtures:
        fix1:
          shape: !type:PhysShapeCircle
            radius: 0.35
          density: 1000
          mask:
            - MachineMask
          layer:
            - MachineLayer
    - type: Anchorable
      delay: 5
    - type: Transform
      anchored: true
    - type: MobState
    - type: MobThresholds
      thresholds:
        0: Alive
        1000: Dead
      stateAlertDict:
        Alive: BorgHealth
        Dead: BorgDead
      showOverlays: false
      allowRevives: true
    - type: Alerts
    - type: Appearance
    - type: ZombieImmune
    - type: PointLight
      radius: 3
      energy: 1.25
      color: "#9dc5c9"
    - type: PowerNetworkBattery
      maxChargeRate: 1000
      canCharge: true
      canDischarge: false
    - type: BatteryCharger
#    - type: Battery
#      charge: 12000
#      maxCharge: 120000
#      pricePerJoule: 0
    - type: Sprite
      sprite: Backmen/Mobs/Silicon/ai.rsi
      drawdepth: Mobs
      noRot: true
      layers:
        - state: 4
    - type: Damageable
      damageContainer: Silicon
    - type: Bloodstream
      bloodReagent: Oil
      bloodlossDamage:
        types:
          Bloodloss: 1
      bloodlossHealDamage:
        types:
          Bloodloss: -0.25
    - type: RandomMetadata
      nameSegments: [names_ai]
    - type: Pullable
    - type: Tag
      tags:
        - Structure
    # Expensive
    - type: StaticPrice
      price: 50000
    - type: CargoSellBlacklist
    - type: NpcFactionMember
      factions:
        - NanoTrasen

- type: entity
  id: AIEye
  parent: AIBase
  name: Invalid AI name
  noSpawn: true
  save: false
  components:
    - type: MobState
      allowedStates:
      - Alive
    - type: BorgAINT
    - type: Tag
      tags:
      - CanPilot
      - CannotSuicide
    - type: Blindable
    - type: Gun
      fireRate: 2
      soundGunshot:
        path: /Audio/Weapons/Guns/Gunshots/taser2.ogg
    - type: AIEye
    # Only ghosts can see the eye
    - type: Visibility
      layer: 4
    # Can see through walls for now
    - type: Eye
      drawFov: true
    - type: Input
      context: "human"
    - type: MobMover
    - type: InputMover
    - type: MovementSpeedModifier
      baseWalkSpeed: 8
      baseSprintSpeed: 12
    - type: MovementIgnoreGravity
    - type: Physics
      bodyType: KinematicController
      fixedRotation: true
    - type: Fixtures
      fixtures:
        fix1:
          shape: !type:PhysShapeCircle
            radius: 0.35
          density: 1000
          mask:
            - GhostImpassable
    - type: Sprite
      drawdepth: Mobs
      noRot: true
      layers:
        - map: ["enum.DamageStateVisualLayers.Base"]
          sprite: Backmen/Mobs/Silicon/cameramob.rsi
          state: ai_camera
          shader: unshaded
