namespace Content.Shared.Backmen.Supermatter.Components;

public partial class BkmSupermatterComponent
{
    /// <summary>
    /// Based on co2 percentage, slowly moves between
    /// 0 and 1. We use it to calc the powerloss_inhibitor
    /// </summary>
    [ViewVariables(VVAccess.ReadOnly)]
    public float PowerlossDynamicScaling;

    /// <summary>
    /// Affects the amount of damage and minimum point
    /// at which the sm takes heat damage
    /// </summary>
    [ViewVariables(VVAccess.ReadOnly)]
    public float DynamicHeatResistance = 1;

    /// <summary>
    /// Multiplier on damage the core takes from absorbing hot gas
    /// Default is ~1/350
    /// </summary>
    [ViewVariables(VVAccess.ReadOnly)]
    public float MoleHeatPenalty = 0.00286f;

    /// <summary>
    /// Inverse of MoleHeatPenalty
    /// </summary>
    [ViewVariables(VVAccess.ReadOnly)]
    public float MoleHeatThreshold = 350f;

    /// <summary>
    /// Multiplier on power generated by nuclear reactions
    /// </summary>
    [ViewVariables(VVAccess.ReadOnly)]
    [DataField("reactionpowerModifier")]
    public float ReactionPowerModifier = 0.55f;

    /// <summary>
    /// Acts as a multiplier on the amount that nuclear reactions increase the supermatter core temperature
    /// </summary>
    [ViewVariables(VVAccess.ReadWrite)]
    [DataField("thermalreleaseModifier")]
    public float ThermalReleaseModifier = 0.2f;

    /// <summary>
    /// Multiplier on how much plasma is released during supermatter reactions
    /// Default is ~1/750
    /// </summary>
    [ViewVariables(VVAccess.ReadOnly)]
    [DataField("plasmareleaseModifier")]
    public float PlasmaReleaseModifier = 0.001333f;

    /// <summary>
    /// Multiplier on how much oxygen is released during supermatter reactions.
    /// Default is ~1/325
    /// </summary>
    [ViewVariables(VVAccess.ReadOnly)]
    [DataField("oxygenreleaseModifier")]
    public float OxygenReleaseEfficiencyModifier = 0.0031f;
}
