using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.Backmen.DiscordAuth;

[GenerateTypedNameReferences]
public sealed partial class DiscordAuthGui : Control
{
    [Dependency] private readonly Content.Corvax.Interfaces.Client.IClientDiscordAuthManager _discordAuthManager = default!;
    [Dependency] private readonly IClientConsoleHost _consoleHost = default!;

    public DiscordAuthGui()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        LayoutContainer.SetAnchorPreset(this, LayoutContainer.LayoutPreset.Wide);

        QuitButton.OnPressed += (_) =>
        {
            _consoleHost.ExecuteCommand("quit");
        };

        UrlEdit.TextRope = new Rope.Leaf(_discordAuthManager.AuthUrl);
        if (_discordAuthManager.Qrcode != null)
        {
            QrCode.Texture = _discordAuthManager.Qrcode;
        }
        
        OpenUrlButton.OnPressed += (_) =>
        {
            if (_discordAuthManager.AuthUrl != string.Empty)
            {
                IoCManager.Resolve<IUriOpener>().OpenUri(_discordAuthManager.AuthUrl);
            }
        };
    }
}
